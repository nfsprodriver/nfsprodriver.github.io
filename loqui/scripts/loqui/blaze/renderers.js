/* jshint -W069 */
Renderers = {};
Renderers['welcome'] = (function () { var self = this; return ["\n        ", HTML.H1(function () { return Spacebars.mustache(self.lookup("_"), "WelcomeTo", Spacebars.dot(self.lookup("app"), "name")); }, HTML.BR(), function () { return Spacebars.mustache(Spacebars.dot(self.lookup("app"), "version")); }, function () { return Spacebars.mustache(Spacebars.dot(self.lookup("app"), "minorVersion")); }), "\n      "]; });
Renderers['providers_list'] = (function () { var self = this; return ["\n        ", UI.Each(function () { return Spacebars.call(self.lookup("providers")); }, UI.block((function () { var self = this; return ["\n          ", Spacebars.With(function () { return Spacebars.call(self.lookup("value")); }, UI.block((function () { var self = this; return ["\n            ", HTML.LI(HTML.A({"data-view-section": function () { return Spacebars.mustache(Spacebars.dot(self.lookup(".."), "key")); }}, HTML.IMG({src: ["img/providers/", function () { return Spacebars.mustache(Spacebars.dot(self.lookup(".."), "key")); }, ".svg"]}), function () { return Spacebars.mustache(self.lookup("longName")); })), "\n          "]; }))), "\n        "]; }))), "\n      "]; });
Renderers['account_header'] = (function () { var self = this; return ["\n        ", Spacebars.With(function () { return Spacebars.call(self.lookup("account")); }, UI.block((function () { var self = this; return ["\n        ", HTML.SPAN({"class": "jid", "data-unread": function () { return Spacebars.mustache(self.lookup("othersUnread")); }}, function () { return Spacebars.mustache(Spacebars.dot(self.lookup("connector"), "provider", "longName")); }), "\n        "]; }))), "\n        ", HTML.SELECT("\n        ", UI.Each(function () { return Spacebars.call(self.lookup("accounts")); }, UI.block((function () { var self = this; return ["\n          ", HTML.OPTION({value: function () { return Spacebars.mustache(self.lookup("index")); }}, function () { return Spacebars.mustache(Spacebars.dot(self.lookup("data"), "core", "user")); }, " (", function () { return Spacebars.mustache(Spacebars.dot(self.lookup("data"), "unread")); }, ")"), "\n        "]; }))), "\n        "), "\n      "]; });
Renderers['chats'] = (function () { var self = this; return ["\n      ", UI.Each(function () { return Spacebars.call(self.lookup("accounts")); }, UI.block((function () { var self = this; return ["\n        ", HTML.UL({"data-jid": function () { return Spacebars.mustache(Spacebars.dot(self.lookup("data"), "core", "fullJid")); }}), "\n      "]; }))), "\n      ", HTML.A({"class": "floater material-icons"}, "create"), "\n    "]; });
Renderers['settings_features'] = (function () { var self = this; return ["\n        ", UI.Each(function () { return Spacebars.call(self.lookup("settings")); }, UI.block((function () { var self = this; return ["\n          ", HTML.LI({"data-key": function () { return Spacebars.mustache(self.lookup("key")); }, "data-value": function () { return Spacebars.mustache(self.lookup("value")); }}, "\n            ", HTML.SPAN(function () { return Spacebars.mustache(self.lookup("caption")); }), "\n            ", HTML.DIV({"class": "switch"}, HTML.DIV({"class": "ball"}), HTML.I({"class": "material-icons"}, "check")), "\n          "), "\n        "]; }))), "\n      "]; });
Renderers['settings_selects'] = (function () { var self = this; return ["\n        ", UI.Each(function () { return Spacebars.call(self.lookup("settings")); }, UI.block((function () { var self = this; return ["\n          ", HTML.LI({"data-key": function () { return Spacebars.mustache(self.lookup("key")); }, "data-type": "select"}, "\n            ", HTML.SELECT("\n              ", UI.Each(function () { return Spacebars.call(self.lookup("options")); }, UI.block((function () { var self = this; return ["\n                ", HTML.OPTION({value: function () { return Spacebars.mustache(self.lookup("value")); }, $dynamic: [function () { return Spacebars.attrMustache(self.lookup("Selected"), self.lookup("value"), Spacebars.dot(self.lookup(".."), "index")); }]}, function () { return Spacebars.mustache(self.lookup("caption")); }), "\n              "]; }))), "\n            "), "\n            ", HTML.SPAN(function () { return Spacebars.mustache(self.lookup("caption")); }), "\n          "), "\n        "]; }))), "\n      "]; });
Renderers['settings_devmode'] = (function () { var self = this; return ["\n        ", UI.Each(function () { return Spacebars.call(self.lookup("settings")); }, UI.block((function () { var self = this; return ["\n          ", HTML.LI({"data-key": function () { return Spacebars.mustache(self.lookup("key")); }, "data-value": function () { return Spacebars.mustache(self.lookup("value")); }}, "\n            ", HTML.SPAN(function () { return Spacebars.mustache(self.lookup("caption")); }), "\n            ", HTML.DIV({"class": "switch"}, HTML.DIV({"class": "ball"}), HTML.I({"class": "material-icons"}, "check")), "\n          "), "\n        "]; }))), "\n      "]; });
Renderers['footbox'] = (function () { var self = this; return ["\n          ", HTML.PROGRESS({value: "0", max: "100"}), "\n          ", HTML.DIV({id: "typing", "data-l10n-id": "Typing"}, "Typing..."), "\n          ", HTML.DIV({"class": function () { return Spacebars.mustache(self.lookup("notRecording")); }}, "\n            ", HTML.BUTTON({id: "emojis", "class": "recommend left", type: "emojis", "data-menu-onclick": "emojiOpen"}, "\n              ", HTML.I({"class": "material-icons"}, "insert_emoticon"), "\n            "), "\n            ", HTML.BUTTON({id: "keyboard", "class": "recommend left", type: "keyboard", "data-menu-onclick": "emojiClose"}, "\n              ", HTML.I({"class": "material-icons"}, "keyboard"), "\n            "), "\n            ", HTML.BUTTON({"class": ["recommend right voice ", function () { return Spacebars.mustache(self.lookup("notSupported")); }], type: "options", "data-menu-onclick": "emojiHide"}, "\n                ", HTML.I({"class": "material-icons"}, "mic"), "\n            "), "\n            ", HTML.BUTTON({id: "plus", "class": "recommend right", type: "options", "data-menu-onclick": "plus"}, "\n              ", HTML.I({"class": "material-icons"}, "attach_file"), "\n            "), "\n            ", HTML.BUTTON({id: "say", "class": "recommend right", type: "send", "data-menu-onclick": "emojiHide"}, "\n              ", HTML.I({"class": "material-icons"}, "send"), "\n            "), "\n            ", HTML.SPAN({id: "text", contenteditable: "true"}), "\n          "), "\n\n          ", HTML.DIV({"class": [function () { return Spacebars.mustache(self.lookup("recording")); }, " voice-recorder"]}, "\n            ", HTML.DIV({"class": "duration"}, HTML.SPAN({"class": "indicator"}), function () { return Spacebars.mustache(self.lookup("duration")); }), "\n\n            ", HTML.BUTTON("\n              ", HTML.I({"class": "material-icons"}, "chevron_left"), "\n            "), "\n\n            ", HTML.DIV({"class": "main"}, function () { return Spacebars.mustache(self.lookup("l10n"), "SwipeToAbort"); }), "\n\n            ", HTML.BUTTON({"class": "voice"}, "\n                ", HTML.I({"class": "material-icons"}, "mic"), "\n            "), "\n\n          "), "\n        "]; });
Renderers['account_cover'] = (function () { var self = this; return ["\n          ", Spacebars.With(function () { return Spacebars.call(self.lookup("account")); }, UI.block((function () { var self = this; return ["\n          ", HTML.DIV({"class": "cover", "data-jid": function () { return Spacebars.mustache(Spacebars.dot(self.lookup("core"), "fullJid")); }}, "\n            ", HTML.SPAN({"class": "avatar"}, HTML.IMG()), "\n            ", HTML.SPAN({"class": "provider"}, function () { return Spacebars.mustache(Spacebars.dot(self.lookup("connector"), "provider", "longName")); }), "\n            ", HTML.SPAN({"class": "jid"}, function () { return Spacebars.mustache(Spacebars.dot(self.lookup("core"), "user")); }), "\n            ", HTML.A({"class": "settings"}, HTML.I({"class": "material-icons"}, "settings")), "\n          "), "\n          "]; }))), "\n        "]; });
Renderers['accounts_list'] = (function () { var self = this; return ["\n          ", UI.Each(function () { return Spacebars.call(self.lookup("accounts")); }, UI.block((function () { var self = this; return ["\n            ", HTML.LI({"data-account-index": function () { return Spacebars.mustache(self.lookup("index")); }, "data-value": function () { return Spacebars.mustache(self.lookup("enabled")); }}, "\n              ", HTML.IMG({"class": "provider", src: ["img/providers/", function () { return Spacebars.mustache(Spacebars.dot(self.lookup("data"), "core", "provider")); }, ".svg"]}), "\n              ", HTML.SPAN(function () { return Spacebars.mustache(Spacebars.dot(self.lookup("data"), "core", "user")); }), "\n              ", HTML.DIV({"class": "switch"}, HTML.DIV({"class": "ball"}), HTML.I({"class": "material-icons"}, "check")), "\n            "), "\n          "]; }))), "\n        "]; });
Renderers['providers_setup'] = (function () { var self = this; return ["\n    ", UI.Each(function () { return Spacebars.call(self.lookup("providers")); }, UI.block((function () { var self = this; return ["\n    ", HTML.SECTION({id: function () { return Spacebars.mustache(self.lookup("key")); }, "class": "setup", "data-transition": "horizontal"}, "\n      ", function () { return Spacebars.makeRaw(Spacebars.mustache(self.lookup("form"), self.lookup("key"))); }, "\n    "), "\n    "]; }))), "\n  "]; });